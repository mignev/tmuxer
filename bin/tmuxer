#!/usr/bin/env python

from tmuxer.tmuxer import Tmuxer
import os
import sys

def run_tmuxer():
    """Parsing arguments and do something :)"""
    if len( sys.argv ) == 1 or sys.argv[1] == 'help' or sys.argv[1] == '-h' or sys.argv[1] == '--help':
        help()
    else:
        shell = os.getenv("SHELL")
        tmuxer_sys_dir = os.getenv("HOME") + '/.tmuxer'
        tmuxer_tmux_files_dir = tmuxer_sys_dir + '/tmux_files'
        tmuxer = Tmuxer()
        action = sys.argv[1]

        if action == 'ls':
            tmuxer.projects_list()
            sys.exit()

        if action == 'version':
            tmuxer.version()
            sys.exit()

        try:
            option = sys.argv[2]
        except IndexError:
            help()

        project_name = option

        if action == 'open':
            tmuxer.open(project_name)
        elif action == 'del':
            tmuxer.delete(project_name)
        elif action == 'run':
            target_tmux_file = tmuxer_tmux_files_dir + '/' + project_name + '.tmux'
            if os.path.exists( target_tmux_file):
                os.system( shell +' '+ target_tmux_file )
            else:
                print('\nProject ' + project_name + ' does not exist!\n')
                print('To create project with this name type this:')
                print('  tmuxer open ' + project_name)

def help():
    """print help info"""
    print("Usage: tmuxer [action] [arguments]\n")
    print("Actions:")
    print("\thelp, -h, --help     show help message and exit")
    print("\topen <projectname>   open project in file editor")
    print("\tdel <projectname>    delete project")
    print("\trun <projectname>    runs the project")
    print("\tls                   print list of existing projects")
    print("\tversion")

    sys.exit()

if __name__ == '__main__':
    run_tmuxer()
